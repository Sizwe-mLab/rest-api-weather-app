{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eKasi Lab\\\\Desktop\\\\rest-api-weather-app-1\\\\src\\\\components\\\\Hourlyforecast.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hourlyforecast = ({\n  forecastData\n}) => {\n  if (!forecastData || !forecastData.list) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No forecast data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hourly Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: forecastData.list.slice(0, 4).map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(item.dt * 1000).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", item.main.temp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, item.dt, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = Hourlyforecast;\nexport default Hourlyforecast;\nvar _c;\n$RefreshReg$(_c, \"Hourlyforecast\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Hourlyforecast","forecastData","list","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","item","Date","dt","toLocaleTimeString","main","temp","_c","$RefreshReg$"],"sources":["C:/Users/eKasi Lab/Desktop/rest-api-weather-app-1/src/components/Hourlyforecast.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Hourlyforecast = ({ forecastData }) => {\r\n\r\n  if (!forecastData || !forecastData.list) {\r\n    return <p>No forecast data available.</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Hourly Forecast</h2>\r\n      <ul>\r\n        {forecastData.list.slice(0, 4).map((item) => (\r\n          <p key={item.dt}>\r\n            <p>{new Date(item.dt * 1000).toLocaleTimeString()}</p>\r\n            <p>Temperature: {item.main.temp}Â°C</p>\r\n          </p>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hourlyforecast;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAE3C,IAAI,CAACA,YAAY,IAAI,CAACA,YAAY,CAACC,IAAI,EAAE;IACvC,oBAAOH,OAAA;MAAAI,QAAA,EAAG;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC3C;EAEA,oBACER,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAAI,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBR,OAAA;MAAAI,QAAA,EACGF,YAAY,CAACC,IAAI,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEC,IAAI,iBACtCX,OAAA;QAAAI,QAAA,gBACEJ,OAAA;UAAAI,QAAA,EAAI,IAAIQ,IAAI,CAACD,IAAI,CAACE,EAAE,GAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC;QAAC;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtDR,OAAA;UAAAI,QAAA,GAAG,eAAa,EAACO,IAAI,CAACI,IAAI,CAACC,IAAI,EAAC,OAAE;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAFhCG,IAAI,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACS,EAAA,GAnBIhB,cAAc;AAqBpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}