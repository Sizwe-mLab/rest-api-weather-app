{"ast":null,"code":"var _jsxFileName = \"/workspaces/rest-api-weather-app/src/components/Dailyforecast.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dailyforecast = ({\n  forecastData\n}) => {\n  if (!forecastData || !forecastData.list) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No forecast data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Function to get the day of the week from a timestamp\n  const getDayOfWeek = timestamp => {\n    const date = new Date(timestamp * 1000);\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    return days[date.getDay()];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Daily Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: forecastData.list.slice(0, 5).map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: getDayOfWeek(item.dt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", item.main.temp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Dailyforecast;\nexport default Dailyforecast;\nvar _c;\n$RefreshReg$(_c, \"Dailyforecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Dailyforecast","forecastData","list","children","fileName","_jsxFileName","lineNumber","columnNumber","getDayOfWeek","timestamp","date","Date","days","getDay","slice","map","item","index","dt","main","temp","_c","$RefreshReg$"],"sources":["/workspaces/rest-api-weather-app/src/components/Dailyforecast.js"],"sourcesContent":["import React from 'react';\n\nconst Dailyforecast = ({ forecastData }) => {\n\n  if (!forecastData || !forecastData.list) {\n    return <p>No forecast data available.</p>;\n  }\n\n  // Function to get the day of the week from a timestamp\n  const getDayOfWeek = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    return days[date.getDay()];\n  };\n\n  return (\n    <div>\n      <h2>Daily Forecast</h2>\n      <ul>\n        {forecastData.list.slice(0, 5).map((item, index) => (\n          <li key={index}>\n            <p>{getDayOfWeek(item.dt)}</p>\n            <p>Temperature: {item.main.temp}Â°C</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Dailyforecast;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAE1C,IAAI,CAACA,YAAY,IAAI,CAACA,YAAY,CAACC,IAAI,EAAE;IACvC,oBAAOH,OAAA;MAAAI,QAAA,EAAG;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC3C;;EAEA;EACA,MAAMC,YAAY,GAAIC,SAAS,IAAK;IAClC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,GAAG,IAAI,CAAC;IACvC,MAAMG,IAAI,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;IAC3F,OAAOA,IAAI,CAACF,IAAI,CAACG,MAAM,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,oBACEd,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAAI,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBR,OAAA;MAAAI,QAAA,EACGF,YAAY,CAACC,IAAI,CAACY,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC7ClB,OAAA;QAAAI,QAAA,gBACEJ,OAAA;UAAAI,QAAA,EAAIK,YAAY,CAACQ,IAAI,CAACE,EAAE;QAAC;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BR,OAAA;UAAAI,QAAA,GAAG,eAAa,EAACa,IAAI,CAACG,IAAI,CAACC,IAAI,EAAC,OAAE;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAF/BU,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACc,EAAA,GA1BIrB,aAAa;AA4BnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}