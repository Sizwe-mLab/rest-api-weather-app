{"ast":null,"code":"var _jsxFileName = \"/workspaces/rest-api-weather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport CurrentWeather from './components/CurrentWeather';\nimport HourlyForecast from './components/Hourlyforecast';\nimport Dailyorecast from './components/Dailyforecast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: 'b1e1d660348fd1a49f685e5d062e6269',\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nfunction App() {\n  _s();\n  const [Location, setLocation] = useState(\"\");\n  const [weatherData, setWeatherData] = useState(null);\n  const [ForecastData, setForecastData] = useState(null);\n  const handleLocationChange = event => {\n    setLocation(event.target.value);\n  };\n  const handleSearch = () => {\n    // Call the weather API with the user's location\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${London}&units=metric&appid=b1e1d660348fd1a49f685e5d062e6269`).then(response => response.json()).then(data => setWeatherData(data));\n\n    // Call the forecast API with the user's location\n    fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${London}&units=metric&appid=b1e1d660348fd1a49f685e5d062e6269`).then(response => response.json()).then(data => setForecastData(data));\n  };\n  //const searchPressed = () =>{\n  //fetch('https://api.openweathermap.org/data/2.5/forecast?q=London&appid=b1e1d660348fd1a49f685e5d062e6269')\n  //.then((response)=>response.json())\n  //.then((result) => {\n  //setWeather(result);\n  //}\n  //)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: location,\n      onChange: handleLocationChange,\n      placeholder: \"Enter your location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CurrentWeather, {\n        weatherData: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(HourlyForecast, {\n        forecastData: forecastData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DailyForecast, {\n        forecastData: forecastData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"USUBLjABC/0UpW55eCsyO3d7sDU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CurrentWeather","HourlyForecast","Dailyorecast","jsxDEV","_jsxDEV","api","key","base","App","_s","Location","setLocation","weatherData","setWeatherData","ForecastData","setForecastData","handleLocationChange","event","target","value","handleSearch","fetch","London","then","response","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","location","onChange","placeholder","onClick","forecastData","DailyForecast","_c","$RefreshReg$"],"sources":["/workspaces/rest-api-weather-app/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport React, {useState} from 'react';\nimport CurrentWeather from './components/CurrentWeather';\nimport HourlyForecast from './components/Hourlyforecast';\nimport Dailyorecast from './components/Dailyforecast';\n\nconst api = {\n    key: 'b1e1d660348fd1a49f685e5d062e6269',\n  base: \"https://api.openweathermap.org/data/2.5/\",\n}\n\nfunction App() {\n\n  const [Location, setLocation] = useState(\"\")\n  const [weatherData, setWeatherData] = useState(null);\n  const [ForecastData, setForecastData] =useState(null);\n\n  const handleLocationChange = (event) =>{\n    setLocation(event.target.value);\n  };\n  const handleSearch = () => {\n    // Call the weather API with the user's location\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${London}&units=metric&appid=b1e1d660348fd1a49f685e5d062e6269`)\n      .then(response => response.json())\n      .then(data => setWeatherData(data));\n\n    // Call the forecast API with the user's location\n    fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${London}&units=metric&appid=b1e1d660348fd1a49f685e5d062e6269`)\n      .then(response => response.json())\n      .then(data => setForecastData(data));\n  };\n  //const searchPressed = () =>{\n   //fetch('https://api.openweathermap.org/data/2.5/forecast?q=London&appid=b1e1d660348fd1a49f685e5d062e6269')\n    //.then((response)=>response.json())\n    //.then((result) => {\n     //setWeather(result);\n    //}\n   //)\n\n    \n  return (\n    \n      <div className=\"App\">\n        <h1>Weather App</h1>\n        <input\n          type=\"text\"\n          value={location}\n          onChange={handleLocationChange}\n          placeholder=\"Enter your location\"\n        />\n        <button onClick={handleSearch}>Search</button>\n        {weatherData && (\n          <div>\n            <CurrentWeather weatherData={weatherData} />\n            <HourlyForecast forecastData={forecastData} />\n            <DailyForecast forecastData={forecastData} />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n    \n      \n  \n\n\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,GAAG,GAAG;EACRC,GAAG,EAAE,kCAAkC;EACzCC,IAAI,EAAE;AACR,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAEhB,QAAQ,CAAC,IAAI,CAAC;EAErD,MAAMiB,oBAAoB,GAAIC,KAAK,IAAI;IACrCN,WAAW,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EACD,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAC,KAAK,CAAC,oDAAoDC,MAAM,sDAAsD,CAAC,CACpHC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIb,cAAc,CAACa,IAAI,CAAC,CAAC;;IAErC;IACAL,KAAK,CAAC,qDAAqDC,MAAM,sDAAsD,CAAC,CACrHC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIX,eAAe,CAACW,IAAI,CAAC,CAAC;EACxC,CAAC;EACD;EACC;EACC;EACA;EACC;EACD;EACD;;EAGD,oBAEItB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBxB,OAAA;MAAAwB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB5B,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXd,KAAK,EAAEe,QAAS;MAChBC,QAAQ,EAAEnB,oBAAqB;MAC/BoB,WAAW,EAAC;IAAqB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACF5B,OAAA;MAAQiC,OAAO,EAAEjB,YAAa;MAAAQ,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7CpB,WAAW,iBACVR,OAAA;MAAAwB,QAAA,gBACExB,OAAA,CAACJ,cAAc;QAACY,WAAW,EAAEA;MAAY;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5C5B,OAAA,CAACH,cAAc;QAACqC,YAAY,EAAEA;MAAa;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9C5B,OAAA,CAACmC,aAAa;QAACD,YAAY,EAAEA;MAAa;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvB,EAAA,CAjDMD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}